<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Universidad Nacional de Colombia POO hub – Object-Oriented Programming</title>
    <link>http://localhost:1313/docs/</link>
    <description>Recent content in Object-Oriented Programming on Universidad Nacional de Colombia POO hub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="http://localhost:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Class concept</title>
      <link>http://localhost:1313/docs/basic-concepts/class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/basic-concepts/class/</guid>
      <description>
        
        
        




  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      A class is a user-defined data type. A class is a blueprint for creating objects that share common properties and behaviors.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;A &lt;font color=&#34;#007bff&#34;&gt;class&lt;/font&gt; can be thought of as a blueprint that defines the structure of objects in a program. It&amp;rsquo;s like a mold from which individual objects are created, each with its own attributes and behaviors.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s consider the concept of a class using the example of a &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;font color=&#34;#007bff&#34;&gt;class&lt;/font&gt; is like a blueprint or template for creating objects. In our example, the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class represents the blueprint for creating individual bank account objects.&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;classDiagram
    class BankAccount {
    Int    accountNumber
    Int    Balance 
    String accountHolder
    deposit(amount)
    withdraw(amount)
    } &lt;/pre&gt;&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
    &lt;div class=&#34;mermaid&#34;&gt;
    classDiagram
    class BankAccount {
    Int    accountNumber
    Int    Balance 
    String accountHolder
    deposit(amount)
    withdraw(amount)
    } 
    &lt;/div&gt;
&lt;/div&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;ㅤㅤㅤㅤㅤ&lt;font color=&#34;#007bff&#34;&gt;BankAccount&lt;/font&gt;ㅤㅤㅤㅤㅤ&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#FFA600&#34;&gt;accountNumber &lt;/font&gt;: Int &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;balance &lt;/font&gt;: Int&lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;accountHolder &lt;/font&gt; : String&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#F2613F&#34;&gt;deposit&lt;/font&gt;(amount) &lt;br/&gt; &lt;font color=&#34;#F2613F&#34;&gt;withdraw&lt;/font&gt;(amount)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Attributes:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;attributes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#attributes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;font color=&#34;#FFA600&#34;&gt;Attributes&lt;/font&gt; are characteristics or properties that describe the objects created from the class. For instance, in the case of a &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt;, attributes could include &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountNumber&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balance&lt;/code&gt;&lt;/font&gt;, and &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountHolder&lt;/code&gt;&lt;/font&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Methods:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;methods&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#methods&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;font color=&#34;#F2613F&#34;&gt;Methods&lt;/font&gt; are functions that define the behavior of the objects created from the class. In the context of a &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt;, methods could include operations like &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw&lt;/code&gt;&lt;/font&gt;, which specify how money can be added to or withdrawn from an account.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This class blueprint defines the structure for creating &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; objects. Each object instantiated from this class inherits &lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt; such as &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountNumber&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balance&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountHolder&lt;/code&gt;&lt;/font&gt;. Additionally, the &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; such as &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit()&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw()&lt;/code&gt;&lt;/font&gt;, enable the objects to perform operations like adding or withdrawing money.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Encapsulation concept</title>
      <link>http://localhost:1313/docs/core-principles/encapsulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/core-principles/encapsulation/</guid>
      <description>
        
        
        




  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;font color=&#34;#1E90FF&#34;&gt;Encapsulation&lt;/font&gt; is a fundamental principle of object-oriented programming (OOP) that restricts direct access to some of an object’s components and keeps data safe within objects. It is about bundling the data (&lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt;) and the &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; that operate on that data into a single unit or class, while controlling access to the data through well-defined interfaces.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;font color=&#34;#1E90FF&#34;&gt;Encapsulation&lt;/font&gt; allows the internal state of an &lt;font color=&#34;#0047ab&#34;&gt;object&lt;/font&gt; be hidden from the outside world. External code cannot directly access or modify the &lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt; of an &lt;font color=&#34;#0047ab&#34;&gt;object&lt;/font&gt;; instead, interaction happens through &lt;font color=&#34;#F2613F&#34;&gt;public methods&lt;/font&gt;, which manage how data is accessed and changed. This principle protects the integrity of the object and enforces a controlled interaction.&lt;/p&gt;
&lt;h4&gt;Bank Account Example:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bank-account-example&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bank-account-example&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;To demonstrate this principle, let’s revisit the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class. We will use &lt;font color=&#34;#1E90FF&#34;&gt;encapsulation&lt;/font&gt; to restrict direct access to the &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;account attributes&lt;/code&gt;&lt;/font&gt; and allow interactions only through the &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit()&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw()&lt;/code&gt;&lt;/font&gt; methods:&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;classDiagram
class BankAccount {
  - Int accountNumber
  - Int balance 
  - String accountHolder
  + deposit(amount)
  + withdraw(amount)
  + getBalance()
} &lt;/pre&gt;















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      The &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountNumber&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balance&lt;/code&gt;&lt;/font&gt;, and &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountHolder&lt;/code&gt;&lt;/font&gt; are private 🔒, meaning they cannot be accessed or modified directly from outside the class.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      The &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit()&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw()&lt;/code&gt;&lt;/font&gt;, and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;getBalance()&lt;/code&gt;&lt;/font&gt; methods are public 🔓 and allow controlled interaction with the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;font color=&#34;#1E90FF&#34;&gt;Encapsulation&lt;/font&gt; ensures that an object&amp;rsquo;s internal state is protected from unintended interference, making it easier to maintain and modify code. It also improves the security and robustness of a program.&lt;/p&gt;
&lt;h4&gt;Why Encapsulation Matters?&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;why-encapsulation-matters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#why-encapsulation-matters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;h5&gt;Data Integrity&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-integrity&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-integrity&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;By restricting direct access to &lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt;, encapsulation helps ensure that the internal state of an object remains consistent. You can&amp;rsquo;t set invalid or unsafe values on the &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balance&lt;/code&gt;&lt;/font&gt; directly; instead, it’s modified through controlled &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; that validate input.&lt;/p&gt;
&lt;h5&gt;Modularity&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;modularity&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#modularity&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;font color=&#34;#1E90FF&#34;&gt;Encapsulation&lt;/font&gt; allows changes to the internal implementation of a class without affecting how other parts of the code interact with it. For example, you can change how &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;getBalance()&lt;/code&gt;&lt;/font&gt; calculates the balance, and the external code won’t need to be updated.&lt;/p&gt;
&lt;h5&gt;Security&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;security&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#security&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;By keeping &lt;font color=&#34;#FFA600&#34;&gt;private attributes&lt;/font&gt; inaccessible from outside, &lt;font color=&#34;#1E90FF&#34;&gt;encapsulation&lt;/font&gt; enhances security. For example, it prevents unauthorized or unintended modifications to critical data, like changing an account’s balance directly.&lt;/p&gt;
&lt;h5&gt;Ease of Maintenance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ease-of-maintenance&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ease-of-maintenance&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;font color=&#34;#1E90FF&#34;&gt;Encapsulation&lt;/font&gt; makes the codebase easier to maintain. Changes to internal workings of the &lt;font color=&#34;#0047ab&#34;&gt;object&lt;/font&gt; can be made without breaking the rest of the system since the external interface remains the same.&lt;/p&gt;





  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;p&gt;&lt;strong&gt;Next Step:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now that you’ve mastered how &lt;font color=&#34;#1E90FF&#34;&gt;encapsulation&lt;/font&gt; protects object data and provides controlled access, proceed to learn about &lt;font color=&#34;#32CD32&#34;&gt;Abstraction&lt;/font&gt;, which focuses on simplifying complex systems by hiding unnecessary details.&lt;/p&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>First Javascript exercise</title>
      <link>http://localhost:1313/methodologies/javascript-practice/firstjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/javascript-practice/firstjs/</guid>
      <description>
        
        
        















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        🎖️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      Write a JavaScript program to create a class called &amp;ldquo;Person&amp;rdquo; with properties for name, age and country. Include a method to display the person&amp;rsquo;s details. Create two instances of the &amp;lsquo;Person&amp;rsquo; class and display their details.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;Plain code approach&lt;/p&gt;
&lt;div class=&#34;hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain&#34;&gt;
  &lt;div class=&#34;hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800&#34;&gt;&lt;button
        class=&#34;hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white&#34;
        role=&#34;tab&#34;
        type=&#34;button&#34;
        aria-controls=&#34;tabs-panel-0&#34; aria-selected=&#34;true&#34;  tabindex=&#34;0&#34;  data-state=&#34;selected&#34;&gt;Explanation&lt;/button&gt;&lt;button
        class=&#34;hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white&#34;
        role=&#34;tab&#34;
        type=&#34;button&#34;
        aria-controls=&#34;tabs-panel-1&#34;&gt;Solution&lt;/button&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;div
  class=&#34;hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block&#34;
  id=&#34;tabs-panel-0&#34;
  role=&#34;tabpanel&#34; tabindex=&#34;0&#34;  data-state=&#34;selected&#34; &gt;In the above exercise we create a &amp;ldquo;Person&amp;rdquo; class with properties for name, age, and country. It includes a method to display the person&amp;rsquo;s details.&lt;br&gt;
Finally it creates two instances of the Person class and displays their details using the displayDetails() method.&lt;/div&gt;
  &lt;div
  class=&#34;hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block&#34;
  id=&#34;tabs-panel-1&#34;
  role=&#34;tabpanel&#34;&gt;&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;country&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;country&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;country&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;displayDetails&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Name: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Age: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Country: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;country&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Create instances of the Person class
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Francisca Rohan&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;USA&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Raimond Aruna&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Netherlands&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Display details of person1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Person-1 Details:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;person1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;displayDetails&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Display details of person2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\nPerson-2 Details:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;person2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;displayDetails&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;Sample output&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Person-1 Details:&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Name: Francisca Rohan&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Age: 25&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Country: USA&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Person-2 Details:&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Name: Raimond Aruna&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Age: 30&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Country: Netherlands&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Write your solution below&lt;/p&gt;








&lt;script
    data-slug-hash=&#34;jYVvao&#34;
    data-user=&#34;your_username&#34;
    data-height=&#34;600&#34;
    data-default-tab=&#34;html&#34;
    data-theme-id=&#34;8862&#34;
    data-editable=&#34;true&#34;
    class=&#39;codepen&#39;
    async
    src=&#34;//codepen.io/assets/embed/ei.js&#34;
&gt;&lt;/script&gt;
&lt;p&gt;Solution in Codepen








&lt;script
    data-slug-hash=&#34;xxQOxOq&#34;
    data-user=&#34;your_username&#34;
    data-height=&#34;600&#34;
    data-default-tab=&#34;html&#34;
    data-theme-id=&#34;8862&#34;
    data-editable=&#34;true&#34;
    class=&#39;codepen&#39;
    async
    src=&#34;//codepen.io/assets/embed/ei.js&#34;
&gt;&lt;/script&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>First Python exercise</title>
      <link>http://localhost:1313/methodologies/python-practice/firstpython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/python-practice/firstpython/</guid>
      <description>
        
        
        















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        🎖️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      Write a Python program to create a class representing a Circle. Include methods to calculate its area and perimeter.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;Plain code approach&lt;/p&gt;
&lt;div class=&#34;hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain&#34;&gt;
  &lt;div class=&#34;hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800&#34;&gt;&lt;button
        class=&#34;hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white&#34;
        role=&#34;tab&#34;
        type=&#34;button&#34;
        aria-controls=&#34;tabs-panel-0&#34; aria-selected=&#34;true&#34;  tabindex=&#34;0&#34;  data-state=&#34;selected&#34;&gt;Explanation&lt;/button&gt;&lt;button
        class=&#34;hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white&#34;
        role=&#34;tab&#34;
        type=&#34;button&#34;
        aria-controls=&#34;tabs-panel-1&#34;&gt;Solution&lt;/button&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;div
  class=&#34;hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block&#34;
  id=&#34;tabs-panel-0&#34;
  role=&#34;tabpanel&#34; tabindex=&#34;0&#34;  data-state=&#34;selected&#34; &gt;In the above exercise we create a &amp;ldquo;Person&amp;rdquo; class with properties for name, age, and country. It includes a method to display the person&amp;rsquo;s details.&lt;br&gt;
Finally it creates two instances of the Person class and displays their details using the displayDetails() method.&lt;/div&gt;
  &lt;div
  class=&#34;hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block&#34;
  id=&#34;tabs-panel-1&#34;
  role=&#34;tabpanel&#34;&gt;&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Import the math module to access mathematical functions like pi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;math&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Define a class called Circle to represent a circle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Circle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Initialize the Circle object with a given radius&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;radius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;radius&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;radius&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Calculate and return the area of the circle using the formula: π * r^2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calculate_circle_area&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;radius&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Calculate and return the perimeter (circumference) of the circle using the formula: 2π * r&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calculate_circle_perimeter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;radius&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Example usage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Prompt the user to input the radius of the circle and convert it to a floating-point number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;radius&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Input the radius of the circle: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Create a Circle object with the provided radius&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;circle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Circle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;radius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Calculate the area of the circle using the calculate_circle_area method&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;area&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;circle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;calculate_circle_area&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Calculate the perimeter of the circle using the calculate_circle_perimeter method&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;perimeter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;circle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;calculate_circle_perimeter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Display the calculated area and perimeter of the circle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Area of the circle:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;area&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Perimeter of the circle:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;perimeter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;Sample output&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Input the radius of the circle: 4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Area of the circle: 50.26548245743669
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Perimeter of the circle: 25.132741228718345&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;hr&gt;

      </description>
    </item>
    
    <item>
      <title>Abstraction concept</title>
      <link>http://localhost:1313/docs/core-principles/abstraction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/core-principles/abstraction/</guid>
      <description>
        
        
        




  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;font color=&#34;#32CD32&#34;&gt;Abstraction&lt;/font&gt; is a core principle of object-oriented programming (OOP) that focuses on hiding complex implementation details and exposing only the essential features of an &lt;font color=&#34;#0047ab&#34;&gt;object&lt;/font&gt;. By using abstraction, developers can simplify complex systems by breaking them down into more manageable parts.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;In OOP, &lt;font color=&#34;#32CD32&#34;&gt;Abstraction&lt;/font&gt; enables you to represent essential aspects of an &lt;font color=&#34;#0047ab&#34;&gt;object&lt;/font&gt; without exposing its internal workings. It allows for designing classes that can interact with other parts of the system while hiding unnecessary complexities.&lt;/p&gt;
&lt;p&gt;For example, in a banking application, you might need to interact with &lt;font color=&#34;#007bff&#34;&gt;bank accounts&lt;/font&gt;, but you don’t need to know the complex algorithms that calculate interest or handle transactions. Instead, you only care about the essential methods and attributes like &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit()&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw()&lt;/code&gt;&lt;/font&gt;, and &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balance&lt;/code&gt;&lt;/font&gt;.&lt;/p&gt;
&lt;h4&gt;Bank Account Example&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bank-account-example&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bank-account-example&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Let’s &lt;font color=&#34;#32CD32&#34;&gt;abstract&lt;/font&gt; the core functionality of a bank account by defining a &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class that hides the internal logic while exposing essential &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; for interacting with it.&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;classDiagram
class BankAccount {
  - Int accountNumber
  - Int balance 
  - String accountHolder
  + deposit(amount)
  + withdraw(amount)
  + getBalance()
} &lt;/pre&gt;















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      Attributes (&lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountNumber&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balance&lt;/code&gt;&lt;/font&gt;, and &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountHolder&lt;/code&gt;&lt;/font&gt;) are &lt;code&gt;private&lt;/code&gt; 🔒
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;These represent the internal data of the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt;. By keeping these attributes &lt;code&gt;private&lt;/code&gt;, we ensure that they cannot be accessed or modified directly by external code.
For example,  without abstraction, an external user could directly modify attributes like &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balance&lt;/code&gt;&lt;/font&gt; to any value, even negative amounts.&lt;/p&gt;
&lt;p&gt;&lt;font color=&#34;#32CD32&#34;&gt;Abstraction&lt;/font&gt; protects this data, ensuring that changes are made through controlled methods like &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit(amount)&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw(amount)&lt;/code&gt;&lt;/font&gt;.&lt;/p&gt;
















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      Methods like &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit(amount)&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw(amount)&lt;/code&gt;&lt;/font&gt; are &lt;code&gt;public&lt;/code&gt; 🔓
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;These methods provide an interface to interact with the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; object. Through abstraction, users can perform essential operations without needing to know how these methods are implemented internally.&lt;/p&gt;
&lt;h4&gt;Why Abstraction Matters?&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;why-abstraction-matters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#why-abstraction-matters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;h5&gt;Separation of Concerns&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;separation-of-concerns&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#separation-of-concerns&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;font color=&#34;#32CD32&#34;&gt;Abstraction&lt;/font&gt; ensures that each part of the system focuses on a specific task. The &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class manages the account data internally, while external code only interacts with it through public methods. This separation makes the system easier to understand, maintain, and extend.&lt;/p&gt;
&lt;h5&gt;Security&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;security&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#security&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;By hiding the internal state of the object, we prevent unauthorized or unintended changes. For instance, without abstraction, a user could directly change the &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountNumber&lt;/code&gt;&lt;/font&gt; of an account. &lt;font color=&#34;#32CD32&#34;&gt;Abstraction&lt;/font&gt; ensures that such sensitive data is protected, allowing only authorized interactions through the defined methods.&lt;/p&gt;
&lt;h5&gt;Simplified Interface&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;simplified-interface&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#simplified-interface&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;Users of the class only need to focus on what’s essential for them. A person using the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class doesn&amp;rsquo;t care about how the balance is stored in memory or how funds are transferred; they only care about interacting with the interface provided—depositing, withdrawing, and checking the balance.&lt;/p&gt;
&lt;p&gt;Through &lt;font color=&#34;#32CD32&#34;&gt;Abstraction&lt;/font&gt;, we define a simple interface for interacting with objects, hiding unnecessary details while maintaining control over how data is accessed and modified. This principle enhances security, improves code maintainability, and ensures a cleaner, more understandable interface.&lt;/p&gt;





  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;p&gt;&lt;strong&gt;Next Step:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now that you’ve seen how &lt;font color=&#34;#32CD32&#34;&gt;abstraction&lt;/font&gt; simplifies object interactions, explore &lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt; , which allows a class (called a child or subclass) to inherit properties and behaviors from another class (called a parent or superclass).&lt;/p&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Second Javascript exercise</title>
      <link>http://localhost:1313/methodologies/javascript-practice/secondjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/javascript-practice/secondjs/</guid>
      <description>
        
        
        















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        🎖️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      Write a JavaScript program to create a class called &amp;lsquo;Rectangle&amp;rsquo; with properties for width and height. Include two methods to calculate rectangle area and perimeter. Create an instance of the &amp;lsquo;Rectangle&amp;rsquo; class and calculate its area and perimeter.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;div class=&#34;hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain&#34;&gt;
  &lt;div class=&#34;hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800&#34;&gt;&lt;button
        class=&#34;hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white&#34;
        role=&#34;tab&#34;
        type=&#34;button&#34;
        aria-controls=&#34;tabs-panel-0&#34; aria-selected=&#34;true&#34;  tabindex=&#34;0&#34;  data-state=&#34;selected&#34;&gt;Explanation&lt;/button&gt;&lt;button
        class=&#34;hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white&#34;
        role=&#34;tab&#34;
        type=&#34;button&#34;
        aria-controls=&#34;tabs-panel-1&#34;&gt;Solution&lt;/button&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;div
  class=&#34;hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block&#34;
  id=&#34;tabs-panel-0&#34;
  role=&#34;tabpanel&#34; tabindex=&#34;0&#34;  data-state=&#34;selected&#34; &gt;In the above exercise we create a &amp;ldquo;Person&amp;rdquo; class with properties for name, age, and country. It includes a method to display the person&amp;rsquo;s details.&lt;br&gt;
Finally it creates two instances of the Person class and displays their details using the displayDetails() method.&lt;/div&gt;
  &lt;div
  class=&#34;hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block&#34;
  id=&#34;tabs-panel-1&#34;
  role=&#34;tabpanel&#34;&gt;&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Rectangle&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;calculateArea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;calculatePerimeter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Create an instance of the Rectangle class
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rectangle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Rectangle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Calculate area and perimeter of the rectangle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;area&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rectangle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;calculateArea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;perimeter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rectangle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;calculatePerimeter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Display the results
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Rectangle Area: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;area&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Rectangle Perimeter: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;perimeter&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;Sample output&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Rectangle Area: 120&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Rectangle Perimeter: 44&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Write your solution below&lt;/p&gt;








&lt;script
    data-slug-hash=&#34;jYVvao&#34;
    data-user=&#34;your_username&#34;
    data-height=&#34;600&#34;
    data-default-tab=&#34;html&#34;
    data-theme-id=&#34;8862&#34;
    data-editable=&#34;true&#34;
    class=&#39;codepen&#39;
    async
    src=&#34;//codepen.io/assets/embed/ei.js&#34;
&gt;&lt;/script&gt;
&lt;p&gt;Solution in Codepen








&lt;script
    data-slug-hash=&#34;yLQJLay&#34;
    data-user=&#34;your_username&#34;
    data-height=&#34;600&#34;
    data-default-tab=&#34;html&#34;
    data-theme-id=&#34;8862&#34;
    data-editable=&#34;true&#34;
    class=&#39;codepen&#39;
    async
    src=&#34;//codepen.io/assets/embed/ei.js&#34;
&gt;&lt;/script&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Second Python exercise</title>
      <link>http://localhost:1313/methodologies/python-practice/secondpython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/python-practice/secondpython/</guid>
      <description>
        
        
        















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        🎖️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      Here it goes the second python exercise
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;

      </description>
    </item>
    
    <item>
      <title>Object concept</title>
      <link>http://localhost:1313/docs/basic-concepts/object/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/basic-concepts/object/</guid>
      <description>
        
        
        




  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      In object-oriented programming (OOP), an &lt;font color=&#34;#0047ab&#34;&gt;object&lt;/font&gt; is an instance of a &lt;font color=&#34;#007bff&#34;&gt;class&lt;/font&gt;, encapsulating attributes and behaviors to model real-world entities.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Remember that we have a class called &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt;. This class represents a bank account, and it has &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; to perform banking operations like depositing money and withdrawing money.&lt;/p&gt;
&lt;p&gt;In our example, an object is an instance of the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class. Each individual bank account created from the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class is an object.&lt;/p&gt;
&lt;p&gt;These objects, such as &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;account 1&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;account 2&lt;/code&gt;&lt;/font&gt;, inherit &lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; from the class, but hold their own unique data.&lt;/p&gt;
&lt;h4&gt;Attributes:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;attributes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#attributes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Each bank account object has its own set of attributes that describe its specific state. For instance, each bank account object might have attributes like &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountNumber&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balance&lt;/code&gt;&lt;/font&gt;, and &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountHolder&lt;/code&gt;&lt;/font&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Methods:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;methods&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#methods&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Objects have access to the methods defined by their class. These methods define the behavior or actions that objects can perform. For example, each bank account object can use methods like &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw&lt;/code&gt;&lt;/font&gt; to manage its funds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Bank Account Example:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bank-account-example&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bank-account-example&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Suppose we create two bank account objects from the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;ㅤㅤㅤㅤㅤ&lt;font color=&#34;#007bff&#34;&gt;Account 1&lt;/font&gt;ㅤㅤㅤㅤㅤ&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;ㅤㅤㅤㅤㅤ&lt;font color=&#34;#007bff&#34;&gt;Account 2&lt;/font&gt;ㅤㅤㅤㅤㅤ&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#FFA600&#34;&gt;accountNumber&lt;/font&gt;: 123456 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;balance&lt;/font&gt;: 500 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;accountHolder&lt;/font&gt;: John Doe&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#FFA600&#34;&gt;accountNumber&lt;/font&gt;: 789012 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;balance&lt;/font&gt;: 1000 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;accountHolder&lt;/font&gt;: Jane Smith&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#F2613F&#34;&gt;deposit&lt;/font&gt;(amount) &lt;br/&gt; &lt;font color=&#34;#F2613F&#34;&gt;withdraw&lt;/font&gt;(amount)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#F2613F&#34;&gt;deposit&lt;/font&gt;(amount) &lt;br/&gt; &lt;font color=&#34;#F2613F&#34;&gt;withdraw&lt;/font&gt;(amount)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Each bank account object represents a distinct bank account with its own unique attributes and behaviors. For example, &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;account 1&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;account 2&lt;/code&gt;&lt;/font&gt; have different &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountNumbers&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balances&lt;/code&gt;&lt;/font&gt;, and &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountHolders&lt;/code&gt;&lt;/font&gt;. They can each independently use the &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw&lt;/code&gt;&lt;/font&gt; methods to manage their funds.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Attributes concept</title>
      <link>http://localhost:1313/docs/basic-concepts/attributes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/basic-concepts/attributes/</guid>
      <description>
        
        
        




  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      In object-oriented programming (OOP), an &lt;font color=&#34;#FFA600&#34;&gt;attribute&lt;/font&gt; (also known as a property or field) is a characteristic or property of an object. It represents the data that an object holds and defines its state.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;font color=&#34;#FFA600&#34;&gt;Attributes&lt;/font&gt; are defined within a &lt;font color=&#34;#007bff&#34;&gt;class&lt;/font&gt;, and each object created from that class has its own unique values for those attributes. For example, in a &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class, attributes might include the &lt;font color=&#34;#FFA600&#34;&gt;accountNumber&lt;/font&gt;, &lt;font color=&#34;#FFA600&#34;&gt;balance&lt;/font&gt;, and &lt;font color=&#34;#FFA600&#34;&gt;accountHolder&lt;/font&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s delve into the concept of attributes considering the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class. Each bank account object created from this class will have its own set of attributes:&lt;/p&gt;
&lt;h4&gt;Bank Account Example:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bank-account-example&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bank-account-example&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Consider the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class. Each bank account object created from this class will have its own set of attributes:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;ㅤㅤㅤㅤㅤ&lt;font color=&#34;#007bff&#34;&gt;BankAccount&lt;/font&gt;ㅤㅤㅤㅤㅤ&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#FFA600&#34;&gt;accountNumber&lt;/font&gt;: Int &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;balance&lt;/font&gt;: Int &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;accountHolder&lt;/font&gt;: String&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Suppose we create two &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; objects:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;ㅤㅤㅤㅤㅤ&lt;font color=&#34;#007bff&#34;&gt;account1&lt;/font&gt;ㅤㅤㅤㅤㅤ&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;ㅤㅤㅤㅤㅤ&lt;font color=&#34;#007bff&#34;&gt;account2&lt;/font&gt;ㅤㅤㅤㅤㅤ&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#FFA600&#34;&gt;accountNumber&lt;/font&gt;: 123456 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;balance&lt;/font&gt;: 500 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;accountHolder&lt;/font&gt;: John Doe&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#FFA600&#34;&gt;accountNumber&lt;/font&gt;: 789012 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;balance&lt;/font&gt;: 1000 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;accountHolder&lt;/font&gt;: Jane Smith&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In this example, we see that although both &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;account1&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;account2&lt;/code&gt;&lt;/font&gt; are instances of the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class, each object has its own unique attribute values.&lt;/p&gt;
&lt;p&gt;Each object of the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class shares the same &lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt;, but the values of these attributes differ from one object to another.
This distinction between objects is a fundamental concept in object-oriented programming, where each object carries its own specific data while sharing the same structure and behavior as defined by the class. Understanding how &lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt; work helps in managing and manipulating objects effectively within a program.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Third Javascript exercise</title>
      <link>http://localhost:1313/methodologies/javascript-practice/thirdjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/javascript-practice/thirdjs/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Third Python exercise</title>
      <link>http://localhost:1313/methodologies/python-practice/thirdpython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/python-practice/thirdpython/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Inheritance concept</title>
      <link>http://localhost:1313/docs/core-principles/inheritance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/core-principles/inheritance/</guid>
      <description>
        
        
        




  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt; is a fundamental principle of object-oriented programming (OOP) that allows a class (called a child or subclass) to inherit properties and behaviors from another class (called a parent or superclass). This enables code reusability, as common &lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; can be defined in the parent class and inherited by its subclasses.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt; promotes the reusability of code by allowing &lt;font color=&#34;#007bff&#34;&gt;classes&lt;/font&gt; to derive common characteristics from a base class. It enables the creation of hierarchical relationships between &lt;font color=&#34;#007bff&#34;&gt;classes&lt;/font&gt;, where a child class can inherit and extend the functionality of its parent class. Subclasses can override or extend inherited methods, adding flexibility and specificity.&lt;/p&gt;
&lt;h4&gt;Bank Account Example:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bank-account-example&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bank-account-example&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;To illustrate &lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt;, let’s extend our &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class to create specialized types of accounts. For instance, we can create a &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt; class that &lt;font color=&#34;#FF6347&#34;&gt;inherits&lt;/font&gt; from &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; and adds a specific interest rate.&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;classDiagram
class BankAccount {
  - Int accountNumber
  - Int balance 
  - String accountHolder
  + deposit(amount)
  + withdraw(amount)
  + getBalance()
}

class SavingsAccount {
  - Float interestRate
  + applyInterest()
}

BankAccount &lt;|-- SavingsAccount&lt;/pre&gt;















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; provides shared &lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt; like &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountNumber&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;balance&lt;/code&gt;&lt;/font&gt;, and &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;accountHolder&lt;/code&gt;&lt;/font&gt;, along with shared &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; like &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit()&lt;/code&gt;&lt;/font&gt;, &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw()&lt;/code&gt;&lt;/font&gt;, and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;getBalance()&lt;/code&gt;&lt;/font&gt;.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt; inherits all the properties and behaviors of &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; but adds its own &lt;font color=&#34;#FFA600&#34;&gt;&lt;code&gt;interestRate&lt;/code&gt;&lt;/font&gt;🔒 attribute and the &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;applyInterest()&lt;/code&gt;&lt;/font&gt;🔓 method.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This example illustrates how &lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt; allows new &lt;font color=&#34;#007bff&#34;&gt;classes&lt;/font&gt; to build on top of existing ones. The &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt; class can leverage all the functionality of &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; while introducing its own features like calculating interest. By sharing common code between the parent and child classes, inheritance reduces redundancy and promotes a cleaner design.&lt;/p&gt;
&lt;h4&gt;Why Inheritance Matters?&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;why-inheritance-matters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#why-inheritance-matters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;h5&gt;Code Reusability&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;code-reusability&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#code-reusability&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt; helps avoid duplication by allowing multiple subclasses to inherit common functionality from a single parent class. This way, shared &lt;font color=&#34;#FFA600&#34;&gt;attributes&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; can be reused without having to rewrite them in each subclass.&lt;/p&gt;
&lt;h5&gt;Extensibility&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;extensibility&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#extensibility&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt; makes it easy to extend functionality. You can create new &lt;font color=&#34;#007bff&#34;&gt;classes&lt;/font&gt; based on existing ones, introducing specialized behaviors while maintaining the foundational code from the parent class.&lt;/p&gt;
&lt;h5&gt;Maintainability&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;maintainability&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#maintainability&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;By organizing code into parent-child class relationships, &lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt; simplifies maintenance. Changes in the parent class automatically propagate to all subclasses, ensuring consistency across your application.&lt;/p&gt;
&lt;h5&gt;Hierarchical Organization&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;hierarchical-organization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#hierarchical-organization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt; naturally supports the creation of a class hierarchy. This makes it easier to understand and structure complex systems, particularly when there are multiple related &lt;font color=&#34;#007bff&#34;&gt;classes&lt;/font&gt;.&lt;/p&gt;





  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;p&gt;&lt;strong&gt;Next Step:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now that you’ve learned how &lt;font color=&#34;#FF6347&#34;&gt;Inheritance&lt;/font&gt; promotes code reusability and extensibility, the next step is to explore &lt;font color=&#34;#8A2BE2&#34;&gt;Polymorphism&lt;/font&gt;, which allows objects of different classes to be treated uniformly.&lt;/p&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Fourth Javascript exercise</title>
      <link>http://localhost:1313/methodologies/javascript-practice/fourthjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/javascript-practice/fourthjs/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Fourth Python exercise</title>
      <link>http://localhost:1313/methodologies/python-practice/fourthpython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/python-practice/fourthpython/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Methods Concept</title>
      <link>http://localhost:1313/docs/basic-concepts/methods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/basic-concepts/methods/</guid>
      <description>
        
        
        




  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      In object-oriented programming, &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; define the actions that an object can perform. They are functions within a class that describe the behaviors or operations of the objects created from the class.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Methods are integral to how objects interact with each other and perform tasks. Let’s explore this concept using the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class example:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;ㅤㅤㅤㅤㅤ&lt;font color=&#34;#007bff&#34;&gt;BankAccount&lt;/font&gt;ㅤㅤㅤㅤㅤ&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#F2613F&#34;&gt;deposit&lt;/font&gt;(amount) &lt;br/&gt; &lt;font color=&#34;#F2613F&#34;&gt;withdraw&lt;/font&gt;(amount)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Bank Account Example:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bank-account-example&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bank-account-example&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;For instance, let&amp;rsquo;s use the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; class to create two bank account objects:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;ㅤㅤㅤㅤㅤ&lt;font color=&#34;#007bff&#34;&gt;account1&lt;/font&gt;ㅤㅤㅤㅤㅤ&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;ㅤㅤㅤㅤㅤ&lt;font color=&#34;#007bff&#34;&gt;account2&lt;/font&gt;ㅤㅤㅤㅤㅤ&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#FFA600&#34;&gt;accountNumber&lt;/font&gt;: 123456 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;balance&lt;/font&gt;: 500 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;accountHolder&lt;/font&gt;: John Doe&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#FFA600&#34;&gt;accountNumber&lt;/font&gt;: 789012 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;balance&lt;/font&gt;: 1000 &lt;br/&gt; &lt;font color=&#34;#FFA600&#34;&gt;accountHolder&lt;/font&gt;: Jane Smith&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#F2613F&#34;&gt;deposit&lt;/font&gt;(amount) &lt;br/&gt; &lt;font color=&#34;#F2613F&#34;&gt;withdraw&lt;/font&gt;(amount)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font color=&#34;#F2613F&#34;&gt;deposit&lt;/font&gt;(amount) &lt;br/&gt; &lt;font color=&#34;#F2613F&#34;&gt;withdraw&lt;/font&gt;(amount)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Method Usage:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;method-usage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#method-usage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;account1&lt;/code&gt;&lt;/font&gt; can use the &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit&lt;/code&gt;&lt;/font&gt; method to add funds and the &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw&lt;/code&gt;&lt;/font&gt; method to withdraw funds.&lt;/li&gt;
&lt;li&gt;&lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;account2&lt;/code&gt;&lt;/font&gt; has the same methods but can perform &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;deposit&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw&lt;/code&gt;&lt;/font&gt; operations based on its own balance and account details.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each object has access to the same &lt;font color=&#34;#F2613F&#34;&gt;methods&lt;/font&gt; defined in the class, which enables them to perform similar actions, but the outcomes of these methods depend on the object&amp;rsquo;s specific attributes and current state.&lt;/p&gt;





  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      Explore the &lt;strong&gt;Core Principles&lt;/strong&gt; chapter to learn more about how methods integrate with the core principles of OOP, including inheritance, polymorphism, abstraction, and encapsulation.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Polymorphism concept</title>
      <link>http://localhost:1313/docs/core-principles/polymorphism/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/core-principles/polymorphism/</guid>
      <description>
        
        
        




  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;font color=&#34;#8A2BE2&#34;&gt;Polymorphism&lt;/font&gt; is a fundamental principle in OOP that allows objects of different classes to be treated as objects of a common base class. It enables one interface to be used for different data types or classes, simplifying code and making it more flexible.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;font color=&#34;#8A2BE2&#34;&gt;Polymorphism&lt;/font&gt; allows for methods to behave differently based on the object that invokes them. It enables multiple classes to implement methods that share the same name but provide different functionalities depending on the specific class.&lt;/p&gt;
&lt;p&gt;For example, a banking system might have different types of accounts such as &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;CheckingAccount&lt;/code&gt;&lt;/font&gt;. Both types of accounts could share a common method like &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;applyInterest()&lt;/code&gt; &lt;/font&gt;, but each would calculate interest in a different way.&lt;/p&gt;
&lt;h4&gt;Bank Account Example:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bank-account-example&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bank-account-example&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Imagine we have a base class, &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt;, and a subclass, &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt;. The method &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;applyInterest()&lt;/code&gt;&lt;/font&gt; behaves differently in the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt; class compared to a more generic method in &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt;:&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;classDiagram
class BankAccount {
  + deposit(amount)
  + withdraw(amount)
  + getBalance()
} 

class SavingsAccount {
  + Float interestRate
  + applyInterest()
  + withdraw(amount)
}

BankAccount &lt;|-- SavingsAccount&lt;/pre&gt;















&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;p&gt;In the diagram:&lt;/p&gt;
&lt;p&gt;The method &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw(amount)&lt;/code&gt;&lt;/font&gt; is &lt;font color=&#34;#8A2BE2&#34;&gt;overridden&lt;/font&gt; in the &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt; class to account for savings-specific rules (like a fee or limit).
Methods within the same class that share the same name but have different parameters.&lt;/p&gt;
&lt;p&gt;The method &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;applyInterest()&lt;/code&gt;&lt;/font&gt; adds behavior specific to savings accounts, demonstrating &lt;font color=&#34;#8A2BE2&#34;&gt;method overloading&lt;/font&gt; because a subclass is providing specific implementation of a method already defined in its superclass.&lt;/p&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;font color=&#34;#8A2BE2&#34;&gt;Polymorphism&lt;/font&gt; allows &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; and &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt; to share similar methods, but execute them differently depending on the object’s type. For example, both classes have a &lt;font color=&#34;#F2613F&#34;&gt;&lt;code&gt;withdraw(amount)&lt;/code&gt;&lt;/font&gt; method, but the behavior differs depending on whether the object is a &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; or a &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt;.&lt;/p&gt;
&lt;h4&gt;Why Polymorphism Matters?&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;why-polymorphism-matters&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#why-polymorphism-matters&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;h5&gt;Code Reusability&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;code-reusability&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#code-reusability&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;font color=&#34;#8A2BE2&#34;&gt;Polymorphism&lt;/font&gt; allows a base class like &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;BankAccount&lt;/code&gt;&lt;/font&gt; to define general behavior, while subclasses like &lt;font color=&#34;#007bff&#34;&gt;&lt;code&gt;SavingsAccount&lt;/code&gt;&lt;/font&gt; can build on and modify that behavior. This makes it easier to extend the system without rewriting code.&lt;/p&gt;
&lt;h5&gt;Maintainability&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;maintainability&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#maintainability&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;font color=&#34;#8A2BE2&#34;&gt;Polymorphism&lt;/font&gt; simplifies code maintenance. If you need to change the behavior of a method for a particular &lt;font color=&#34;#007bff&#34;&gt;class&lt;/font&gt;, you can override it in the subclass, without altering the base class or other subclasses.&lt;/p&gt;
&lt;h5&gt;Dynamic Behavior&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dynamic-behavior&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dynamic-behavior&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;At runtime, the system can decide which &lt;font color=&#34;#F2613F&#34;&gt;method&lt;/font&gt; to invoke depending on the object&amp;rsquo;s type, leading to more flexible and dynamic code.&lt;/p&gt;





  












&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;
        ℹ️
      &lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;
      &lt;p&gt;&lt;strong&gt;Next Step:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now that you’ve mastered all four core principles of object-oriented programming (OOP), it’s time to explore the &lt;a href=&#34;http://localhost:1313/content/methodologies/_index.md&#34; &gt;Methodologies&lt;/a&gt; section, where you can dive into different learning paths. These methodologies provide various ways to apply the OOP concepts you’ve learned based on different teaching styles and use cases.&lt;/p&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Quiz&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;quiz&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#quiz&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;hr&gt;
&lt;form id=&#34;quiz&#34;&gt;
  &lt;label&gt;Question 1: What is OOP?&lt;/label&gt;&lt;br&gt;
  &lt;input type=&#34;radio&#34; name=&#34;q1&#34; value=&#34;a&#34;&gt; A programming paradigm&lt;br&gt;
  &lt;input type=&#34;radio&#34; name=&#34;q1&#34; value=&#34;b&#34;&gt; A database model&lt;br&gt;
  &lt;input type=&#34;submit&#34; value=&#34;Submit&#34;&gt;
&lt;/form&gt;
&lt;div id=&#34;result&#34;&gt;&lt;/div&gt;
&lt;script&gt;
  document.getElementById(&#39;quiz&#39;).onsubmit = function(e) {
    e.preventDefault();
    const answer = document.querySelector(&#39;input[name=&#34;q1&#34;]:checked&#39;).value;
    document.getElementById(&#39;result&#39;).innerText = answer === &#39;a&#39; ? &#39;Correct!&#39; : &#39;Try again!&#39;;
  };
&lt;/script&gt;
      </description>
    </item>
    
    <item>
      <title>Fifth Javascript exercise</title>
      <link>http://localhost:1313/methodologies/javascript-practice/fifthjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/javascript-practice/fifthjs/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Fifth Python exercise</title>
      <link>http://localhost:1313/methodologies/python-practice/fifthpython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/python-practice/fifthpython/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Sixth Javascript exercise</title>
      <link>http://localhost:1313/methodologies/javascript-practice/sixthjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/javascript-practice/sixthjs/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Sixth Python exercise</title>
      <link>http://localhost:1313/methodologies/python-practice/sixthpython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/python-practice/sixthpython/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>C&#43;&#43; contents</title>
      <link>http://localhost:1313/methodologies/languages/cpp/more-contents/first/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/languages/cpp/more-contents/first/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Java contents</title>
      <link>http://localhost:1313/methodologies/languages/java/more-contents/first/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/languages/java/more-contents/first/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Javascript contents</title>
      <link>http://localhost:1313/methodologies/languages/javascript/more-contents/first/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/languages/javascript/more-contents/first/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Python contents</title>
      <link>http://localhost:1313/methodologies/languages/python/more-contents/first/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/methodologies/languages/python/more-contents/first/</guid>
      <description>
        
        
        
      </description>
    </item>
    
  </channel>
</rss>
